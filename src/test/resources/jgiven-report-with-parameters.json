{
  "className": "de.opitz.poc.featuredoc.features.calculation.BaseAwardCalculationTest",
  "name": "Base Award Calculation",
  "scenarios": [
    {
      "className": "de.opitz.poc.featuredoc.features.calculation.BaseAwardCalculationTest",
      "testMethodName": "calculateALotOfBasePoints",
      "description": "Calculate a lot of base points",
      "tagIds": [
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Feature-base award calculation",
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1123",
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1224"
      ],
      "explicitParameters": [
        "name",
        "award"
      ],
      "derivedParameters": [
        "name",
        "award"
      ],
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "an anonymous user",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "an anonymous user"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 47125,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "an event",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "an event"
                },
                {
                  "value": "purchase 1",
                  "argumentInfo": {
                    "parameterName": "name",
                    "argumentName": "name",
                    "formattedValue": "purchase 1"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 262125,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "requesting the welcome page",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "requesting the welcome page"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 56750,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the award accrued is",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the award accrued is"
                },
                {
                  "value": "150",
                  "argumentInfo": {
                    "parameterName": "award",
                    "argumentName": "award",
                    "formattedValue": "150"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 167875,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [
            "purchase 1",
            "150"
          ],
          "derivedArguments": [
            "purchase 1",
            "150"
          ],
          "status": "SUCCESS",
          "durationInNanos": 6908250
        },
        {
          "caseNr": 2,
          "steps": [
            {
              "name": "an anonymous user",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "an anonymous user"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 25667,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "an event",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "an event"
                },
                {
                  "value": "sale 1",
                  "argumentInfo": {
                    "parameterName": "name",
                    "argumentName": "name",
                    "formattedValue": "sale 1"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 112667,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "requesting the welcome page",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "requesting the welcome page"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 24083,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the award accrued is",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the award accrued is"
                },
                {
                  "value": "50",
                  "argumentInfo": {
                    "parameterName": "award",
                    "argumentName": "award",
                    "formattedValue": "50"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 92542,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [
            "sale 1",
            "50"
          ],
          "derivedArguments": [
            "sale 1",
            "50"
          ],
          "status": "SUCCESS",
          "durationInNanos": 702750
        },
        {
          "caseNr": 3,
          "steps": [
            {
              "name": "an anonymous user",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "an anonymous user"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 24084,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "an event",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "an event"
                },
                {
                  "value": "sharing on social media 1",
                  "argumentInfo": {
                    "parameterName": "name",
                    "argumentName": "name",
                    "formattedValue": "sharing on social media 1"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 116833,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "requesting the welcome page",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "requesting the welcome page"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 16083,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the award accrued is",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the award accrued is"
                },
                {
                  "value": "10",
                  "argumentInfo": {
                    "parameterName": "award",
                    "argumentName": "award",
                    "formattedValue": "10"
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 107959,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [
            "sharing on social media 1",
            "10"
          ],
          "derivedArguments": [
            "sharing on social media 1",
            "10"
          ],
          "status": "SUCCESS",
          "durationInNanos": 707625
        }
      ],
      "casesAsTable": true,
      "durationInNanos": 8318625
    },
    {
      "className": "de.opitz.poc.featuredoc.features.calculation.BaseAwardCalculationTest",
      "testMethodName": "calculateBasePoints",
      "description": "Calculate base points",
      "tagIds": [
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Feature-base award calculation",
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1123",
        "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1224"
      ],
      "explicitParameters": [],
      "derivedParameters": [],
      "scenarioCases": [
        {
          "caseNr": 1,
          "steps": [
            {
              "name": "an anonymous user",
              "words": [
                {
                  "value": "Given",
                  "isIntroWord": true
                },
                {
                  "value": "an anonymous user"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 29959,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "events resulting in awards",
              "words": [
                {
                  "value": "and",
                  "isIntroWord": true
                },
                {
                  "value": "events resulting in awards"
                },
                {
                  "value": "EventWithAward[name\u003dpurchase, amount\u003d100], EventWithAward[name\u003dsale, amount\u003d50], EventWithAward[name\u003dsharing on social media, amount\u003d10]",
                  "argumentInfo": {
                    "argumentName": "eventWithAwards",
                    "dataTable": {
                      "headerType": "HORIZONTAL",
                      "data": [
                        [
                          "name",
                          "amount"
                        ],
                        [
                          "purchase",
                          "100"
                        ],
                        [
                          "sale",
                          "50"
                        ],
                        [
                          "sharing on social media",
                          "10"
                        ]
                      ]
                    }
                  }
                }
              ],
              "status": "PASSED",
              "durationInNanos": 4206916,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "requesting the welcome page",
              "words": [
                {
                  "value": "When",
                  "isIntroWord": true
                },
                {
                  "value": "requesting the welcome page"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 20125,
              "depth": 0,
              "parentFailed": false
            },
            {
              "name": "the german welcome page is returned",
              "words": [
                {
                  "value": "Then",
                  "isIntroWord": true
                },
                {
                  "value": "the german welcome page is returned"
                }
              ],
              "status": "PASSED",
              "durationInNanos": 18416,
              "depth": 0,
              "parentFailed": false
            }
          ],
          "explicitArguments": [],
          "derivedArguments": [],
          "status": "SUCCESS",
          "durationInNanos": 4753916
        }
      ],
      "casesAsTable": false,
      "durationInNanos": 4753916
    }
  ],
  "tagMap": {
    "de.opitz.poc.featuredoc.jgiven.external.annotations.Feature-base award calculation": {
      "fullType": "de.opitz.poc.featuredoc.jgiven.external.annotations.Feature",
      "type": "Feature",
      "name": "feature",
      "value": "base award calculation",
      "description": "This is just a description in Markdown syntax.\n\nIt should tell me, whether this is feasible and good looking. For that I\u0027m trying to come up with some longer text, to showcase what could happen in reality,\nif we included feature documentation in the @Feature annotation.\n\nI will now copy some text from the internet, because I don\u0027t know what I should write about...\n\n\u003e Language-specific OpenFeature SDK implementations **SHOULD** expose an in-memory provider built into the SDK.\n\nThe in-memory provider is intended to be used for testing; SDK consumers may use it for their use cases.\nHence, the packaging, naming, and access modifiers must be set appropriately.\n\nGiven below are features this provider **MUST** support,\n\n- Provider must be initiated with a pre-defined set of flags provided to a constructor\n- Feature Flag structure must be minimal but should help to test OpenFeature specification\n- EvaluationContext support should be provided through callbacks/lambda expressions\n- Provider must support a means of updating flag values, resulting in the emission of `PROVIDER_CONFIGURATION_CHANGED` events\n- Provider must be maintained to support specification changes\n\n## SDK end-to-end testing\n\n\u003e E2E tests must utilize [in-memory provider](#in-memory-provider) defined within the SDK and must be self-contained.\n\nOpenFeature project maintains an end-to-end(e2e) test suite defined with [Gherkin syntax](https://cucumber.io/docs/gherkin/).\nThese test definitions reside in [Appendix B](./appendix-b-gherkin-suites.md)\n\n```mermaid\nflowchart LR \n    subgraph SDK \n    A[e2e Tests] -.-\u003e B[In-memory provider]\n    end\n```\n\n## Multi-Provider\n\n### Introduction\n\nThe OpenFeature Multi-Provider wraps multiple underlying providers in a unified interface, allowing the SDK client to transparently interact with all those providers at once.\nThis allows use cases where a single client and evaluation interface is desired, but where the flag data should come from more than one source.\n\nSome examples:\n\n- A migration from one feature flagging provider to another.\n  During that process, you may have some flags that have been ported to the new system and others that haven’t.\n  Therefore you’d want the Multi-Provider to return the result of the “new” system if available otherwise, return the \"old\" system’s result.\n- Long-term use of multiple sources for flags.\n  For example, someone might want to be able to combine environment variables, database entries, and vendor feature flag results together in a single interface, and define the precedence order in which those sources should be consulted.\n\nCheck the [OpenFeature JavaScript Multi-Provider](https://github.com/open-feature/js-sdk-contrib/tree/main/libs/providers/multi-provider) for a reference implementation.\n\n### Basics\n\nThe provider is initialized by passing a list of provider instances it should evaluate.\nThe order of the array defines the order in which sources should be evaluated.\nThe provider whose value is ultimately used will depend on the “strategy” that is provided, which can be chosen from a set of pre-defined ones or implemented as custom logic.\n\nFor example:\n\n```typescript\nconst multiProvider \u003d new MultiProvider(\n [\n  {\n   provider: new ProviderA(),\n  },\n  {\n   provider: new ProviderB()\n  }\n ],\n new FirstMatchStrategy()\n)\n```\n",
      "href": ""
    },
    "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1123": {
      "fullType": "de.opitz.poc.featuredoc.jgiven.external.annotations.Story",
      "type": "Story",
      "value": "JUSTDE-1123",
      "description": "JUSTDE-1123",
      "href": ""
    },
    "de.opitz.poc.featuredoc.jgiven.external.annotations.Story-JUSTDE-1224": {
      "fullType": "de.opitz.poc.featuredoc.jgiven.external.annotations.Story",
      "type": "Story",
      "value": "JUSTDE-1224",
      "description": "JUSTDE-1224",
      "href": ""
    }
  }
}
